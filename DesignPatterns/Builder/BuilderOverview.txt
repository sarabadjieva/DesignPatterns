Builder design pattern

Some objects are simple and can be created in a single ctor call
Other objects require a lot of ceremony to create
Having an object with 10 ctor arguments is not productive (can lead to mistakes)
Instead, opt for piecewise construction
Builder provides an API for constructing an object step-by-step

Builder: When a piecewise object construction is complicated, provide an API for doing it succinctly.

Fluent Builder (see Builder.cs)
- A builder that allows to chain several calls (ex: StringBuilder sb; sb.Append().Append()...)


---Summary---
A builder is a separate component for building an object
Can either give builder a ctor or return it via a static function
To make a builder fluent, return "this"
Different facets of an object can be built with a different builders working in a tandem via a base class