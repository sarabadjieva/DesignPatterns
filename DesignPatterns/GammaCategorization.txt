//Overview of each pattern is provided in corresponding folder

Design Patterns are typically split into three categories:

Creational Patterns
- Deals with creation (construction) of objects
- Explicit (constructor) vs. implicit (DI, reflection, etc.)
- Wholesale (single statement) vs piecewise (step-by-step) initialization
- Factory, Abstract Factory, Builder, Prototype, Singleton

Structural Patterns
- Concerned with the structure (e.g., class members)
- Many patterns are wrappers that mimic the underlying class' interface
- Importance of good API design
- Adapter, Bridge, Composite, Decorator, Facade, Proxy, Flyweight

Behavioral Patterns
- They are all different, no central theme
- Most of them are unique in their approach
- Command, Iterator, Mediator, Memento, Observer, State, Strategy, Template, Visitor, Null Object